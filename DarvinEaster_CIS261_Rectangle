import random

class Card:
    def __init__(self, rank, suit):
        self.rank = rank
        self.suit = suit

    def __str__(self):
        return f"{self.rank} of {self.suit}"

class Deck:
    def __init__(self):
        ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']
        suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades']
        self.deck = [Card(rank, suit) for suit in suits for rank in ranks]

    def shuffle(self):
        random.shuffle(self.deck)

    def deal(self, num_cards):
        if num_cards > len(self.deck):
            raise ValueError("Not enough cards left to deal.")
        dealt_cards = self.deck[:num_cards]
        self.deck = self.deck[num_cards:]
        return dealt_cards

    def count(self):
        return len(self.deck)

# Main Function
def main():
    print("Card Dealer")
    deck = Deck()
    deck.shuffle()
    print("I have shuffled a deck of 52 cards.")
    
    while True:
        try:
            num_cards = int(input("How many cards would you like?: "))
            if num_cards <= 0:
                print("Please enter a positive number.")
                continue

            cards = deck.deal(num_cards)
            print("\nHere are your cards:")
            for card in cards:
                print(card)

            print(f"\nThere are {deck.count()} cards left in the deck.")
            break
        except ValueError as e:
            print(e)

    print("\nGood luck!")
    input("Press any key to continue . . .")

if __name__ == "__main__":
    main()
